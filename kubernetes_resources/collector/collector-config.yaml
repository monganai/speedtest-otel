---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols: 
          grpc:
          http:

      hostmetrics:
        collection_interval: 10s
        scrapers:
          paging:
            metrics:
              system.paging.utilization:
                enabled: true
          cpu:
            metrics:
              system.cpu.utilization:
                enabled: true
          disk:
          filesystem:
            metrics:
              system.filesystem.utilization:
                enabled: true
          load:
          memory:
          network:
          processes:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otelcol.'
            scrape_interval: 10s
            static_configs:
            - targets: ['0.0.0.0:8888']


      filelog:
        include_file_path: true
        poll_interval: 500ms
        include:
          - /var/log/**/*example*/*.log

    processors:
      batch:
        send_batch_max_size: 100
        send_batch_size: 10
        timeout: 10s

      k8sattributes:
        passthrough: false
        auth_type: "serviceAccount"

        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip

        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
            - k8s.namespace.name
            - k8s.pod.start_time
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.name
            - container.image.tag
            - container.id
            - k8s.container.name
            - container.image.name
            - container.image.tag
            - container.id

          labels:
          - tag_name: kube_app_name
            key: app.kubernetes.io/name
            from: pod
          - tag_name: kube_app_instance
            key: app.kubernetes.io/instance
            from: pod
          - tag_name: kube_app_version
            key: app.kubernetes.io/version
            from: pod
          - tag_name: kube_app_component
            key: app.kubernetes.io/component
            from: pod
          - tag_name: kube_app_part_of
            key: app.kubernetes.io/part-of
            from: pod
          - tag_name: kube_app_managed_by
            key: app.kubernetes.io/managed-by
            from: pod


    

    exporters:
      datadog:
        api:
          site: datadoghq.com
          key: ${env:DD_API_KEY}


    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        metrics:
          receivers: [hostmetrics, prometheus, otlp]
          processors: [ batch]
          exporters: [datadog]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [datadog]
        logs:
          receivers: [otlp, filelog]
          processors: [batch]
          exporters: [datadog]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
data:
  agent.yaml: |
    receivers:
      otlp:
        protocols: 
          grpc:
    processors:
    exporters:
      otlp:
        endpoint: "opentelemetrycollector.default.svc.cluster.local:4317"
        insecure: true

    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: []
          exporters: [otlp]
        traces:
          receivers: [otlp]
          processors: []
          exporters: [otlp]
        logs:
          receivers: [otlp]
          processors: []
          exporters: [otlp]
